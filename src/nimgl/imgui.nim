# Copyright 2018, NimGL contributors.

## ImGUI Bindings
## ===
##
## NOTE: Unless you want to compile witch cpp please provide a dll of the library,
## made with cimgui.
##
## This code was automatically generated by nimgl_gen<https://github.com/lmariscal/nimgl_gen>`_
## with the imgui generator.
##
## HACK: If you are on windows be sure to compile the cimgui dll with visual studio and
## not with mingw.

when not defined(imguiSrc):
  when defined(windows):
    const imgui_dll* = "cimgui.dll"
  elif defined(macosx):
    const imgui_dll* = "cimgui.dylib"
  else:
    const imgui_dll* = "cimgui.so"
  {.pragma: imgui_lib, dynlib: imgui_dll, cdecl.}
else:
  {.compile: "private/cimgui/imgui/imgui.cpp",
    compile: "private/cimgui/imgui/imgui_draw.cpp",
    compile: "private/cimgui/imgui/imgui_demo.cpp",
    compile: "private/cimgui/imgui/imgui_widgets.cpp",
    compile: "private/cimgui/cimgui/cimgui_auto.cpp".}
  {.pragma: imgui_lib, cdecl.}

const
  ImGuiComboFlags_None = 0
  ImGuiComboFlags_PopupAlignLeft = 1
  ImGuiComboFlags_HeightSmall = 2
  ImGuiComboFlags_HeightRegular = 4
  ImGuiComboFlags_HeightLarge = 8
  ImGuiComboFlags_HeightLargest = 16
  ImGuiComboFlags_NoArrowButton = 32
  ImGuiComboFlags_NoPreview = 64
  ImGuiComboFlags_HeightMask = 30
  ImGuiTreeNodeFlags_None = 0
  ImGuiTreeNodeFlags_Selected = 1
  ImGuiTreeNodeFlags_Framed = 2
  ImGuiTreeNodeFlags_AllowItemOverlap = 4
  ImGuiTreeNodeFlags_NoTreePushOnOpen = 8
  ImGuiTreeNodeFlags_NoAutoOpenOnLog = 16
  ImGuiTreeNodeFlags_DefaultOpen = 32
  ImGuiTreeNodeFlags_OpenOnDoubleClick = 64
  ImGuiTreeNodeFlags_OpenOnArrow = 128
  ImGuiTreeNodeFlags_Leaf = 256
  ImGuiTreeNodeFlags_Bullet = 512
  ImGuiTreeNodeFlags_FramePadding = 1024
  ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 8192
  ImGuiTreeNodeFlags_CollapsingHeader = 26
  ImGuiStyleVar_Alpha = 0
  ImGuiStyleVar_WindowPadding = 1
  ImGuiStyleVar_WindowRounding = 2
  ImGuiStyleVar_WindowBorderSize = 3
  ImGuiStyleVar_WindowMinSize = 4
  ImGuiStyleVar_WindowTitleAlign = 5
  ImGuiStyleVar_ChildRounding = 6
  ImGuiStyleVar_ChildBorderSize = 7
  ImGuiStyleVar_PopupRounding = 8
  ImGuiStyleVar_PopupBorderSize = 9
  ImGuiStyleVar_FramePadding = 10
  ImGuiStyleVar_FrameRounding = 11
  ImGuiStyleVar_FrameBorderSize = 12
  ImGuiStyleVar_ItemSpacing = 13
  ImGuiStyleVar_ItemInnerSpacing = 14
  ImGuiStyleVar_IndentSpacing = 15
  ImGuiStyleVar_ScrollbarSize = 16
  ImGuiStyleVar_ScrollbarRounding = 17
  ImGuiStyleVar_GrabMinSize = 18
  ImGuiStyleVar_GrabRounding = 19
  ImGuiStyleVar_ButtonTextAlign = 20
  ImGuiStyleVar_COUNT = 21
  ImGuiCol_Text = 0
  ImGuiCol_TextDisabled = 1
  ImGuiCol_WindowBg = 2
  ImGuiCol_ChildBg = 3
  ImGuiCol_PopupBg = 4
  ImGuiCol_Border = 5
  ImGuiCol_BorderShadow = 6
  ImGuiCol_FrameBg = 7
  ImGuiCol_FrameBgHovered = 8
  ImGuiCol_FrameBgActive = 9
  ImGuiCol_TitleBg = 10
  ImGuiCol_TitleBgActive = 11
  ImGuiCol_TitleBgCollapsed = 12
  ImGuiCol_MenuBarBg = 13
  ImGuiCol_ScrollbarBg = 14
  ImGuiCol_ScrollbarGrab = 15
  ImGuiCol_ScrollbarGrabHovered = 16
  ImGuiCol_ScrollbarGrabActive = 17
  ImGuiCol_CheckMark = 18
  ImGuiCol_SliderGrab = 19
  ImGuiCol_SliderGrabActive = 20
  ImGuiCol_Button = 21
  ImGuiCol_ButtonHovered = 22
  ImGuiCol_ButtonActive = 23
  ImGuiCol_Header = 24
  ImGuiCol_HeaderHovered = 25
  ImGuiCol_HeaderActive = 26
  ImGuiCol_Separator = 27
  ImGuiCol_SeparatorHovered = 28
  ImGuiCol_SeparatorActive = 29
  ImGuiCol_ResizeGrip = 30
  ImGuiCol_ResizeGripHovered = 31
  ImGuiCol_ResizeGripActive = 32
  ImGuiCol_PlotLines = 33
  ImGuiCol_PlotLinesHovered = 34
  ImGuiCol_PlotHistogram = 35
  ImGuiCol_PlotHistogramHovered = 36
  ImGuiCol_TextSelectedBg = 37
  ImGuiCol_DragDropTarget = 38
  ImGuiCol_NavHighlight = 39
  ImGuiCol_NavWindowingHighlight = 40
  ImGuiCol_NavWindowingDimBg = 41
  ImGuiCol_ModalWindowDimBg = 42
  ImGuiCol_COUNT = 43
  ImGuiWindowFlags_None = 0
  ImGuiWindowFlags_NoTitleBar = 1
  ImGuiWindowFlags_NoResize = 2
  ImGuiWindowFlags_NoMove = 4
  ImGuiWindowFlags_NoScrollbar = 8
  ImGuiWindowFlags_NoScrollWithMouse = 16
  ImGuiWindowFlags_NoCollapse = 32
  ImGuiWindowFlags_AlwaysAutoResize = 64
  ImGuiWindowFlags_NoSavedSettings = 256
  ImGuiWindowFlags_NoInputs = 512
  ImGuiWindowFlags_MenuBar = 1024
  ImGuiWindowFlags_HorizontalScrollbar = 2048
  ImGuiWindowFlags_NoFocusOnAppearing = 4096
  ImGuiWindowFlags_NoBringToFrontOnFocus = 8192
  ImGuiWindowFlags_AlwaysVerticalScrollbar = 16384
  ImGuiWindowFlags_AlwaysHorizontalScrollbar = 32768
  ImGuiWindowFlags_AlwaysUseWindowPadding = 65536
  ImGuiWindowFlags_NoNavInputs = 262144
  ImGuiWindowFlags_NoNavFocus = 524288
  ImGuiWindowFlags_NoNav = 786432
  ImGuiWindowFlags_NavFlattened = 8388608
  ImGuiWindowFlags_ChildWindow = 16777216
  ImGuiWindowFlags_Tooltip = 33554432
  ImGuiWindowFlags_Popup = 67108864
  ImGuiWindowFlags_Modal = 134217728
  ImGuiWindowFlags_ChildMenu = 268435456
  ImGuiNavInput_Activate = 0
  ImGuiNavInput_Cancel = 1
  ImGuiNavInput_Input = 2
  ImGuiNavInput_Menu = 3
  ImGuiNavInput_DpadLeft = 4
  ImGuiNavInput_DpadRight = 5
  ImGuiNavInput_DpadUp = 6
  ImGuiNavInput_DpadDown = 7
  ImGuiNavInput_LStickLeft = 8
  ImGuiNavInput_LStickRight = 9
  ImGuiNavInput_LStickUp = 10
  ImGuiNavInput_LStickDown = 11
  ImGuiNavInput_FocusPrev = 12
  ImGuiNavInput_FocusNext = 13
  ImGuiNavInput_TweakSlow = 14
  ImGuiNavInput_TweakFast = 15
  ImGuiNavInput_KeyMenu = 16
  ImGuiNavInput_KeyLeft = 17
  ImGuiNavInput_KeyRight = 18
  ImGuiNavInput_KeyUp = 19
  ImGuiNavInput_KeyDown = 20
  ImGuiNavInput_COUNT = 21
  ImGuiNavInput_InternalStart = 16
  ImGuiFocusedFlags_None = 0
  ImGuiFocusedFlags_ChildWindows = 1
  ImGuiFocusedFlags_RootWindow = 2
  ImGuiFocusedFlags_AnyWindow = 4
  ImGuiFocusedFlags_RootAndChildWindows = 3
  ImGuiSelectableFlags_None = 0
  ImGuiSelectableFlags_DontClosePopups = 1
  ImGuiSelectableFlags_SpanAllColumns = 2
  ImGuiSelectableFlags_AllowDoubleClick = 4
  ImGuiSelectableFlags_Disabled = 8
  ImGuiKey_Tab = 0
  ImGuiKey_LeftArrow = 1
  ImGuiKey_RightArrow = 2
  ImGuiKey_UpArrow = 3
  ImGuiKey_DownArrow = 4
  ImGuiKey_PageUp = 5
  ImGuiKey_PageDown = 6
  ImGuiKey_Home = 7
  ImGuiKey_End = 8
  ImGuiKey_Insert = 9
  ImGuiKey_Delete = 10
  ImGuiKey_Backspace = 11
  ImGuiKey_Space = 12
  ImGuiKey_Enter = 13
  ImGuiKey_Escape = 14
  ImGuiKey_A = 15
  ImGuiKey_C = 16
  ImGuiKey_V = 17
  ImGuiKey_X = 18
  ImGuiKey_Y = 19
  ImGuiKey_Z = 20
  ImGuiKey_COUNT = 21
  ImFontAtlasFlags_None = 0
  ImFontAtlasFlags_NoPowerOfTwoHeight = 1
  ImFontAtlasFlags_NoMouseCursors = 2
  ImGuiConfigFlags_NavEnableKeyboard = 1
  ImGuiConfigFlags_NavEnableGamepad = 2
  ImGuiConfigFlags_NavEnableSetMousePos = 4
  ImGuiConfigFlags_NavNoCaptureKeyboard = 8
  ImGuiConfigFlags_NoMouse = 16
  ImGuiConfigFlags_NoMouseCursorChange = 32
  ImGuiConfigFlags_IsSRGB = 1048576
  ImGuiConfigFlags_IsTouchScreen = 2097152
  ImDrawCornerFlags_TopLeft = 1
  ImDrawCornerFlags_TopRight = 2
  ImDrawCornerFlags_BotLeft = 4
  ImDrawCornerFlags_BotRight = 8
  ImDrawCornerFlags_Top = 3
  ImDrawCornerFlags_Bot = 12
  ImDrawCornerFlags_Left = 5
  ImDrawCornerFlags_Right = 10
  ImDrawCornerFlags_All = 15
  ImGuiDragDropFlags_None = 0
  ImGuiDragDropFlags_SourceNoPreviewTooltip = 1
  ImGuiDragDropFlags_SourceNoDisableHover = 2
  ImGuiDragDropFlags_SourceNoHoldToOpenOthers = 4
  ImGuiDragDropFlags_SourceAllowNullID = 8
  ImGuiDragDropFlags_SourceExtern = 16
  ImGuiDragDropFlags_SourceAutoExpirePayload = 32
  ImGuiDragDropFlags_AcceptBeforeDelivery = 1024
  ImGuiDragDropFlags_AcceptNoDrawDefaultRect = 2048
  ImGuiDragDropFlags_AcceptNoPreviewTooltip = 4096
  ImGuiDragDropFlags_AcceptPeekOnly = 3072
  ImGuiCond_Always = 1
  ImGuiCond_Once = 2
  ImGuiCond_FirstUseEver = 4
  ImGuiCond_Appearing = 8
  ImGuiInputTextFlags_None = 0
  ImGuiInputTextFlags_CharsDecimal = 1
  ImGuiInputTextFlags_CharsHexadecimal = 2
  ImGuiInputTextFlags_CharsUppercase = 4
  ImGuiInputTextFlags_CharsNoBlank = 8
  ImGuiInputTextFlags_AutoSelectAll = 16
  ImGuiInputTextFlags_EnterReturnsTrue = 32
  ImGuiInputTextFlags_CallbackCompletion = 64
  ImGuiInputTextFlags_CallbackHistory = 128
  ImGuiInputTextFlags_CallbackAlways = 256
  ImGuiInputTextFlags_CallbackCharFilter = 512
  ImGuiInputTextFlags_AllowTabInput = 1024
  ImGuiInputTextFlags_CtrlEnterForNewLine = 2048
  ImGuiInputTextFlags_NoHorizontalScroll = 4096
  ImGuiInputTextFlags_AlwaysInsertMode = 8192
  ImGuiInputTextFlags_ReadOnly = 16384
  ImGuiInputTextFlags_Password = 32768
  ImGuiInputTextFlags_NoUndoRedo = 65536
  ImGuiInputTextFlags_CharsScientific = 131072
  ImGuiInputTextFlags_CallbackResize = 262144
  ImGuiInputTextFlags_Multiline = 1048576
  ImGuiMouseCursor_None = -1
  ImGuiMouseCursor_Arrow = 0
  ImGuiMouseCursor_TextInput = 1
  ImGuiMouseCursor_ResizeAll = 2
  ImGuiMouseCursor_ResizeNS = 3
  ImGuiMouseCursor_ResizeEW = 4
  ImGuiMouseCursor_ResizeNESW = 5
  ImGuiMouseCursor_ResizeNWSE = 6
  ImGuiMouseCursor_Hand = 7
  ImGuiMouseCursor_COUNT = 8
  ImGuiColorEditFlags_None = 0
  ImGuiColorEditFlags_NoAlpha = 2
  ImGuiColorEditFlags_NoPicker = 4
  ImGuiColorEditFlags_NoOptions = 8
  ImGuiColorEditFlags_NoSmallPreview = 16
  ImGuiColorEditFlags_NoInputs = 32
  ImGuiColorEditFlags_NoTooltip = 64
  ImGuiColorEditFlags_NoLabel = 128
  ImGuiColorEditFlags_NoSidePreview = 256
  ImGuiColorEditFlags_NoDragDrop = 512
  ImGuiColorEditFlags_AlphaBar = 65536
  ImGuiColorEditFlags_AlphaPreview = 131072
  ImGuiColorEditFlags_AlphaPreviewHalf = 262144
  ImGuiColorEditFlags_HDR = 524288
  ImGuiColorEditFlags_RGB = 1048576
  ImGuiColorEditFlags_HSV = 2097152
  ImGuiColorEditFlags_HEX = 4194304
  ImGuiColorEditFlags_Uint8 = 8388608
  ImGuiColorEditFlags_Float = 16777216
  ImGuiColorEditFlags_PickerHueBar = 33554432
  ImGuiColorEditFlags_PickerHueWheel = 67108864
  ImGuiColorEditFlags_InputsMask = 7340032
  ImGuiColorEditFlags_DataTypeMask = 25165824
  ImGuiColorEditFlags_PickerMask = 100663296
  ImGuiColorEditFlags_OptionsDefault = 42991616
  ImGuiHoveredFlags_None = 0
  ImGuiHoveredFlags_ChildWindows = 1
  ImGuiHoveredFlags_RootWindow = 2
  ImGuiHoveredFlags_AnyWindow = 4
  ImGuiHoveredFlags_AllowWhenBlockedByPopup = 8
  ImGuiHoveredFlags_AllowWhenBlockedByActiveItem = 32
  ImGuiHoveredFlags_AllowWhenOverlapped = 64
  ImGuiHoveredFlags_AllowWhenDisabled = 128
  ImGuiHoveredFlags_RectOnly = 104
  ImGuiHoveredFlags_RootAndChildWindows = 3
  ImGuiDir_None = -1
  ImGuiDir_Left = 0
  ImGuiDir_Right = 1
  ImGuiDir_Up = 2
  ImGuiDir_Down = 3
  ImGuiDir_COUNT = 4
  ImDrawListFlags_AntiAliasedLines = 1
  ImDrawListFlags_AntiAliasedFill = 2
  ImGuiDataType_S32 = 0
  ImGuiDataType_U32 = 1
  ImGuiDataType_S64 = 2
  ImGuiDataType_U64 = 3
  ImGuiDataType_Float = 4
  ImGuiDataType_Double = 5
  ImGuiDataType_COUNT = 6
  ImGuiBackendFlags_HasGamepad = 1
  ImGuiBackendFlags_HasMouseCursors = 2
  ImGuiBackendFlags_HasSetMousePos = 4

type
  ImGuiColumnsFlags* = int32
  ImS32* = uint32
  ImGuiTreeNodeFlags* = int32
  ImGuiFocusedFlags* = int32
  ImGuiHoveredFlags* = int32
  ImU64* = uint64
  ImGuiID* = uint32
  ImDrawListFlags* = int32
  ImGuiBackendFlags* = int32
  ImGuiMouseCursor* = int32
  ImGuiStyleVar* = int32
  ImGuiDir* = int32
  ImGuiCol* = int32
  ImDrawIdx* = uint16
  ImGuiComboFlags* = int32
  ImDrawCornerFlags* = int32
  ImWchar* = uint16
  ImGuiSizeCallback* = proc(data: ptr ImGuiSizeCallbackData): void {.cdecl.}
  ImGuiConfigFlags* = int32
  ImGuiInputTextCallback* = proc(data: ptr ImGuiInputTextCallbackData): int32 {.cdecl.}
  ImGuiWindowFlags* = int32
  ImGuiKey* = int32
  ImGuiInputTextFlags* = int32
  ImGuiDataType* = int32
  ImGuiCond* = int32
  ImU32* = uint32
  ImGuiNavInput* = int32
  ImGuiColorEditFlags* = int32
  ImGuiSelectableFlags* = int32
  ImDrawCallback* = proc(parent_list: ptr ImDrawList, cmd: ptr ImDrawCmd): void {.cdecl.}
  ImTextureID* = pointer
  ImFontAtlasFlags* = int32
  ImS64* = int64
  ImGuiDragDropFlags* = int32

  ImGuiContext* = object
  Pair* = object
    key*: ImGuiID
    val*: int32
  ImDrawListSharedData* = object
  ImDrawVert* = object
    pos*: ImVec2
    uv*: ImVec2
    col*: ImU32
  ImDrawList* = object
    cmdBuffer*: ImVector
    idxBuffer*: ImVector
    vtxBuffer*: ImVector
    flags*: ImDrawListFlags
    data*: ptr ImDrawListSharedData
    ownerName*: cstring
    vtxCurrentIdx*: uint32
    vtxWritePtr*: ptr ImDrawVert
    idxWritePtr*: ptr ImDrawIdx
    clipRectStack*: ImVector
    textureIdStack*: ImVector
    path*: ImVector
    channelsCurrent*: int32
    channelsCount*: int32
    channels*: ImVector
  ImFont* = object
    fontSize*: float32
    scale*: float32
    displayOffset*: ImVec2
    glyphs*: ImVector
    indexAdvanceX*: ImVector
    indexLookup*: ImVector
    fallbackGlyph*: ptr ImFontGlyph
    fallbackAdvanceX*: float32
    fallbackChar*: ImWchar
    configDataCount*: int16
    configData*: ptr ImFontConfig
    containerAtlas*: ptr ImFontAtlas
    ascent*: float32
    descent*: float32
    dirtyLookupTables*: bool
    metricsTotalSurface*: int32
  ImGuiListClipper* = object
    startPosY*: float32
    itemsHeight*: float32
    itemsCount*: int32
    stepNo*: int32
    displayStart*: int32
    displayEnd*: int32
  CustomRect* = object
    iD*: uint32
    width*: uint16
    height*: uint16
    x*: uint16
    y*: uint16
    glyphAdvanceX*: float32
    glyphOffset*: ImVec2
    font*: ptr ImFont
  ImVec4* = object
    x*: float32
    y*: float32
    z*: float32
    w*: float32
  GlyphRangesBuilder* = object
    usedChars*: ImVector
  ImGuiStorage* = object
    data*: ImVector
  ImFontAtlas* = object
    locked*: bool
    flags*: ImFontAtlasFlags
    texID*: ImTextureID
    texDesiredWidth*: int32
    texGlyphPadding*: int32
    texPixelsAlpha8*: cstring
    texPixelsRGBA32*: ptr uint32
    texWidth*: int32
    texHeight*: int32
    texUvScale*: ImVec2
    texUvWhitePixel*: ImVec2
    fonts*: ImVector
    customRects*: ImVector
    configData*: ImVector
    customRectIds*: array[1, int32]
  ImFontGlyph* = object
    codepoint*: ImWchar
    advanceX*: float32
    x0*: float32
    y0*: float32
    x1*: float32
    y1*: float32
    u0*: float32
    v0*: float32
    u1*: float32
    v1*: float32
  ImFontConfig* = object
    fontData*: pointer
    fontDataSize*: int32
    fontDataOwnedByAtlas*: bool
    fontNo*: int32
    sizePixels*: float32
    oversampleH*: int32
    oversampleV*: int32
    pixelSnapH*: bool
    glyphExtraSpacing*: ImVec2
    glyphOffset*: ImVec2
    glyphRanges*: ptr ImWchar
    glyphMinAdvanceX*: float32
    glyphMaxAdvanceX*: float32
    mergeMode*: bool
    rasterizerFlags*: uint32
    rasterizerMultiply*: float32
    name*: array[40, char]
    dstFont*: ptr ImFont
  ImDrawData* = object
    valid*: bool
    cmdLists*: ptr ptr ImDrawList
    cmdListsCount*: int32
    totalIdxCount*: int32
    totalVtxCount*: int32
    displayPos*: ImVec2
    displaySize*: ImVec2
  ImGuiTextBuffer* = object
    buf*: ImVector
  ImGuiStyle* = object
    alpha*: float32
    windowPadding*: ImVec2
    windowRounding*: float32
    windowBorderSize*: float32
    windowMinSize*: ImVec2
    windowTitleAlign*: ImVec2
    childRounding*: float32
    childBorderSize*: float32
    popupRounding*: float32
    popupBorderSize*: float32
    framePadding*: ImVec2
    frameRounding*: float32
    frameBorderSize*: float32
    itemSpacing*: ImVec2
    itemInnerSpacing*: ImVec2
    touchExtraPadding*: ImVec2
    indentSpacing*: float32
    columnsMinSpacing*: float32
    scrollbarSize*: float32
    scrollbarRounding*: float32
    grabMinSize*: float32
    grabRounding*: float32
    buttonTextAlign*: ImVec2
    displayWindowPadding*: ImVec2
    displaySafeAreaPadding*: ImVec2
    mouseCursorScale*: float32
    antiAliasedLines*: bool
    antiAliasedFill*: bool
    curveTessellationTol*: float32
    colors*: array[ImGuiCol_COUNT, ImVec4]
  ImDrawChannel* = object
    cmdBuffer*: ImVector
    idxBuffer*: ImVector
  ImDrawCmd* = object
    elemCount*: uint32
    clipRect*: ImVec4
    textureId*: ImTextureID
    userCallback*: ImDrawCallback
    userCallbackData*: pointer
  TextRange* = object
    b*: cstring
    e*: cstring
  ImGuiOnceUponAFrame* = object
    refFrame*: int32
  ImVector* = object
  ImGuiIO* = object
    configFlags*: ImGuiConfigFlags
    backendFlags*: ImGuiBackendFlags
    displaySize*: ImVec2
    deltaTime*: float32
    iniSavingRate*: float32
    iniFilename*: cstring
    logFilename*: cstring
    mouseDoubleClickTime*: float32
    mouseDoubleClickMaxDist*: float32
    mouseDragThreshold*: float32
    keyMap*: array[ImGuiKey_COUNT, int32]
    keyRepeatDelay*: float32
    keyRepeatRate*: float32
    userData*: pointer
    fonts*: ptr ImFontAtlas
    fontGlobalScale*: float32
    fontAllowUserScaling*: bool
    fontDefault*: ptr ImFont
    displayFramebufferScale*: ImVec2
    displayVisibleMin*: ImVec2
    displayVisibleMax*: ImVec2
    mouseDrawCursor*: bool
    configMacOSXBehaviors*: bool
    configInputTextCursorBlink*: bool
    configResizeWindowsFromEdges*: bool
    getClipboardTextFn*: proc(user_data: pointer): cstring {.cdecl.}
    setClipboardTextFn*: proc(user_data: pointer, text: cstring): void {.cdecl.}
    clipboardUserData*: pointer
    imeSetInputScreenPosFn*: proc(x: int32, y: int32): void {.cdecl.}
    imeWindowHandle*: pointer
    renderDrawListsFnUnused*: pointer
    mousePos*: ImVec2
    mouseDown*: array[5, bool]
    mouseWheel*: float32
    mouseWheelH*: float32
    keyCtrl*: bool
    keyShift*: bool
    keyAlt*: bool
    keySuper*: bool
    keysDown*: array[512, bool]
    inputCharacters*: array[16+1, ImWchar]
    navInputs*: array[ImGuiNavInput_COUNT, float32]
    wantCaptureMouse*: bool
    wantCaptureKeyboard*: bool
    wantTextInput*: bool
    wantSetMousePos*: bool
    wantSaveIniSettings*: bool
    navActive*: bool
    navVisible*: bool
    framerate*: float32
    metricsRenderVertices*: int32
    metricsRenderIndices*: int32
    metricsRenderWindows*: int32
    metricsActiveWindows*: int32
    metricsActiveAllocations*: int32
    mouseDelta*: ImVec2
    mousePosPrev*: ImVec2
    mouseClickedPos*: array[5, ImVec2]
    mouseClickedTime*: array[5, float64]
    mouseClicked*: array[5, bool]
    mouseDoubleClicked*: array[5, bool]
    mouseReleased*: array[5, bool]
    mouseDownOwned*: array[5, bool]
    mouseDownDuration*: array[5, float32]
    mouseDownDurationPrev*: array[5, float32]
    mouseDragMaxDistanceAbs*: array[5, ImVec2]
    mouseDragMaxDistanceSqr*: array[5, float32]
    keysDownDuration*: array[512, float32]
    keysDownDurationPrev*: array[512, float32]
    navInputsDownDuration*: array[ImGuiNavInput_COUNT, float32]
    navInputsDownDurationPrev*: array[ImGuiNavInput_COUNT, float32]
  ImGuiPayload* = object
    data*: pointer
    dataSize*: int32
    sourceId*: ImGuiID
    sourceParentId*: ImGuiID
    dataFrameCount*: int32
    dataType*: array[32+1, char]
    preview*: bool
    delivery*: bool
  ImColor* = object
    value*: ImVec4
  ImGuiSizeCallbackData* = object
    userData*: pointer
    pos*: ImVec2
    currentSize*: ImVec2
    desiredSize*: ImVec2
  ImGuiTextFilter* = object
    inputBuf*: array[256, char]
    filters*: ImVector
    countGrep*: int32
  ImGuiInputTextCallbackData* = object
    eventFlag*: ImGuiInputTextFlags
    flags*: ImGuiInputTextFlags
    userData*: pointer
    eventChar*: ImWchar
    eventKey*: ImGuiKey
    buf*: cstring
    bufTextLen*: int32
    bufSize*: int32
    bufDirty*: bool
    cursorPos*: int32
    selectionStart*: int32
    selectionEnd*: int32
  ImVec2* = object
    x*: float32
    y*: float32

proc igGetFrameHeight*(): float32 {.imgui_lib, importc: "igGetFrameHeight".}
proc igCreateContext*(shared_font_atlas: ptr ImFontAtlas): ptr ImGuiContext {.imgui_lib, importc: "igCreateContext".}
proc igTextUnformatted*(text: cstring, text_end: cstring): void {.imgui_lib, importc: "igTextUnformatted".}
proc igPopFont*(): void {.imgui_lib, importc: "igPopFont".}
proc igCombo*(label: cstring, current_item: ptr int32, items: ptr ptr char , items_count: int32, popup_max_height_in_items: int32): bool {.imgui_lib, importc: "igCombo".}
proc igCaptureKeyboardFromApp*(capture: bool): void {.imgui_lib, importc: "igCaptureKeyboardFromApp".}
proc igIsWindowFocused*(flags: ImGuiFocusedFlags): bool {.imgui_lib, importc: "igIsWindowFocused".}
proc igRender*(): void {.imgui_lib, importc: "igRender".}
proc imDrawList_ChannelsSetCurrent*(channel_index: int32): void {.imgui_lib, importc: "ImDrawList_ChannelsSetCurrent".}
proc igDragFloat4*(label: cstring, v: ptr float, v_speed: float32, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igDragFloat4".}
proc imDrawList_ChannelsSplit*(channels_count: int32): void {.imgui_lib, importc: "ImDrawList_ChannelsSplit".}
proc igIsMousePosValid*(mouse_pos: ptr ImVec2): bool {.imgui_lib, importc: "igIsMousePosValid".}
proc igGetCursorScreenPos*(): ImVec2 {.imgui_lib, importc: "igGetCursorScreenPos".}
proc igDebugCheckVersionAndDataLayout*(version_str: cstring, sz_io: uint32, sz_style: uint32, sz_vec2: uint32, sz_vec4: uint32, sz_drawvert: uint32): bool {.imgui_lib, importc: "igDebugCheckVersionAndDataLayout".}
proc igSetScrollHere*(center_y_ratio: float32): void {.imgui_lib, importc: "igSetScrollHere".}
proc igSetScrollY*(scroll_y: float32): void {.imgui_lib, importc: "igSetScrollY".}
proc igSetColorEditOptions*(flags: ImGuiColorEditFlags): void {.imgui_lib, importc: "igSetColorEditOptions".}
proc igSetScrollFromPosY*(pos_y: float32, center_y_ratio: float32): void {.imgui_lib, importc: "igSetScrollFromPosY".}
proc igGetStyleColorVec4*(idx: ImGuiCol): ptr ImVec4 {.imgui_lib, importc: "igGetStyleColorVec4".}
proc igIsMouseHoveringRect*(r_min: ImVec2, r_max: ImVec2, clip: bool): bool {.imgui_lib, importc: "igIsMouseHoveringRect".}
proc imVec4_ImVec4*(): void {.imgui_lib, importc: "ImVec4_ImVec4".}
proc imColor_SetHSV*(h: float32, s: float32, v: float32, a: float32): void {.imgui_lib, importc: "ImColor_SetHSV".}
proc igDragFloat3*(label: cstring, v: ptr float, v_speed: float32, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igDragFloat3".}
proc imDrawList_AddPolyline*(points: ptr ImVec2, num_points: int32, col: ImU32, closed: bool, thickness: float32): void {.imgui_lib, importc: "ImDrawList_AddPolyline".}
proc igValue*(prefix: cstring, b: bool): void {.imgui_lib, importc: "igValue".}
proc imGuiTextFilter_Build*(): void {.imgui_lib, importc: "ImGuiTextFilter_Build".}
proc igGetItemRectMax*(): ImVec2 {.imgui_lib, importc: "igGetItemRectMax".}
proc igIsItemDeactivated*(): bool {.imgui_lib, importc: "igIsItemDeactivated".}
proc igPushStyleVar*(idx: ImGuiStyleVar, val: float32): void {.imgui_lib, importc: "igPushStyleVar".}
proc igSaveIniSettingsToMemory*(out_ini_size: ptr uint32): cstring {.imgui_lib, importc: "igSaveIniSettingsToMemory".}
proc igDragIntRange2*(label: cstring, v_current_min: ptr int32, v_current_max: ptr int32, v_speed: float32, v_min: int32, v_max: int32, format: cstring, format_max: cstring): bool {.imgui_lib, importc: "igDragIntRange2".}
proc igUnindent*(indent_w: float32): void {.imgui_lib, importc: "igUnindent".}
proc imFontAtlas_AddFontFromMemoryCompressedBase85TTF*(compressed_font_data_base85: cstring, size_pixels: float32, font_cfg: ptr ImFontConfig, glyph_ranges: ptr ImWchar): ptr ImFont {.imgui_lib, importc: "ImFontAtlas_AddFontFromMemoryCompressedBase85TTF".}
proc igPopAllowKeyboardFocus*(): void {.imgui_lib, importc: "igPopAllowKeyboardFocus".}
proc igLoadIniSettingsFromDisk*(ini_filename: cstring): void {.imgui_lib, importc: "igLoadIniSettingsFromDisk".}
proc igGetCursorStartPos*(): ImVec2 {.imgui_lib, importc: "igGetCursorStartPos".}
proc igSetCursorScreenPos*(screen_pos: ImVec2): void {.imgui_lib, importc: "igSetCursorScreenPos".}
proc igInputInt4*(label: cstring, v: ptr int, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputInt4".}
proc imFont_AddRemapChar*(dst: ImWchar, src: ImWchar, overwrite_dst: bool): void {.imgui_lib, importc: "ImFont_AddRemapChar".}
proc imFont_AddGlyph*(c: ImWchar, x0: float32, y0: float32, x1: float32, y1: float32, u0: float32, v0: float32, u1: float32, v1: float32, advance_x: float32): void {.imgui_lib, importc: "ImFont_AddGlyph".}
proc igIsRectVisible*(size: ImVec2): bool {.imgui_lib, importc: "igIsRectVisible".}
proc imFont_GrowIndex*(new_size: int32): void {.imgui_lib, importc: "ImFont_GrowIndex".}
proc imFontAtlas_Build*(): bool {.imgui_lib, importc: "ImFontAtlas_Build".}
proc igLabelText*(label: cstring, fmt: cstring): void {.imgui_lib, importc: "igLabelText", varargs.}
proc imFont_RenderText*(draw_list: ptr ImDrawList, size: float32, pos: ImVec2, col: ImU32, clip_rect: ImVec4, text_begin: cstring, text_end: cstring, wrap_width: float32, cpu_fine_clip: bool): void {.imgui_lib, importc: "ImFont_RenderText".}
proc igLogFinish*(): void {.imgui_lib, importc: "igLogFinish".}
proc igIsKeyPressed*(user_key_index: int32, repeat: bool): bool {.imgui_lib, importc: "igIsKeyPressed".}
proc igGetColumnOffset*(column_index: int32): float32 {.imgui_lib, importc: "igGetColumnOffset".}
proc imDrawList_PopClipRect*(): void {.imgui_lib, importc: "ImDrawList_PopClipRect".}
proc imFont_FindGlyphNoFallback*(c: ImWchar): ptr ImFontGlyph {.imgui_lib, importc: "ImFont_FindGlyphNoFallback".}
proc igSetNextWindowCollapsed*(collapsed: bool, cond: ImGuiCond): void {.imgui_lib, importc: "igSetNextWindowCollapsed".}
proc igGetCurrentContext*(): ptr ImGuiContext {.imgui_lib, importc: "igGetCurrentContext".}
proc igSmallButton*(label: cstring): bool {.imgui_lib, importc: "igSmallButton".}
proc igOpenPopupOnItemClick*(str_id: cstring, mouse_button: int32): bool {.imgui_lib, importc: "igOpenPopupOnItemClick".}
proc igIsAnyMouseDown*(): bool {.imgui_lib, importc: "igIsAnyMouseDown".}
proc imFont_CalcWordWrapPositionA*(scale: float32, text: cstring, text_end: cstring, wrap_width: float32): cstring {.imgui_lib, importc: "ImFont_CalcWordWrapPositionA".}
proc imFont_CalcTextSizeA*(size: float32, max_width: float32, wrap_width: float32, text_begin: cstring, text_end: cstring, remaining: ptr ptr char): ImVec2 {.imgui_lib, importc: "ImFont_CalcTextSizeA".}
proc glyphRangesBuilder_SetBit*(n: int32): void {.imgui_lib, importc: "GlyphRangesBuilder_SetBit".}
proc imFont_IsLoaded*(): bool {.imgui_lib, importc: "ImFont_IsLoaded".}
proc imFont_GetCharAdvance*(c: ImWchar): float32 {.imgui_lib, importc: "ImFont_GetCharAdvance".}
proc igImageButton*(user_texture_id: ImTextureID, size: ImVec2, uv0: ImVec2, uv1: ImVec2, frame_padding: int32, bg_col: ImVec4, tint_col: ImVec4): bool {.imgui_lib, importc: "igImageButton".}
proc imFont_SetFallbackChar*(c: ImWchar): void {.imgui_lib, importc: "ImFont_SetFallbackChar".}
proc igEndFrame*(): void {.imgui_lib, importc: "igEndFrame".}
proc igSliderFloat2*(label: cstring, v: ptr float, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igSliderFloat2".}
proc imFont_RenderChar*(draw_list: ptr ImDrawList, size: float32, pos: ImVec2, col: ImU32, c: uint16): void {.imgui_lib, importc: "ImFont_RenderChar".}
proc igRadioButton*(label: cstring, active: bool): bool {.imgui_lib, importc: "igRadioButton".}
proc imDrawList_PushClipRect*(clip_rect_min: ImVec2, clip_rect_max: ImVec2, intersect_with_current_clip_rect: bool): void {.imgui_lib, importc: "ImDrawList_PushClipRect".}
proc imFont_FindGlyph*(c: ImWchar): ptr ImFontGlyph {.imgui_lib, importc: "ImFont_FindGlyph".}
proc igIsItemDeactivatedAfterEdit*(): bool {.imgui_lib, importc: "igIsItemDeactivatedAfterEdit".}
proc igGetWindowDrawList*(): ptr ImDrawList {.imgui_lib, importc: "igGetWindowDrawList".}
proc imFontAtlas_AddFont*(font_cfg: ptr ImFontConfig): ptr ImFont {.imgui_lib, importc: "ImFontAtlas_AddFont".}
proc imDrawList_PathBezierCurveTo*(p1: ImVec2, p2: ImVec2, p3: ImVec2, num_segments: int32): void {.imgui_lib, importc: "ImDrawList_PathBezierCurveTo".}
proc imGuiPayload_Clear*(): void {.imgui_lib, importc: "ImGuiPayload_Clear".}
proc igNewLine*(): void {.imgui_lib, importc: "igNewLine".}
proc igIsItemFocused*(): bool {.imgui_lib, importc: "igIsItemFocused".}
proc igLoadIniSettingsFromMemory*(ini_data: cstring, ini_size: uint32): void {.imgui_lib, importc: "igLoadIniSettingsFromMemory".}
proc igSliderInt2*(label: cstring, v: ptr int, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igSliderInt2".}
proc imFont_DestroyImFont*(): void {.imgui_lib, importc: "ImFont_~ImFont".}
proc igSetWindowSize*(size: ImVec2, cond: ImGuiCond): void {.imgui_lib, importc: "igSetWindowSize".}
proc igInputFloat*(label: cstring, v: ptr float32, step: float32, step_fast: float32, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputFloat".}
proc imFont_ImFont*(): void {.imgui_lib, importc: "ImFont_ImFont".}
proc imGuiStorage_SetFloat*(key: ImGuiID, val: float32): void {.imgui_lib, importc: "ImGuiStorage_SetFloat".}
proc igColorConvertRGBtoHSV*(r: float32, g: float32, b: float32, out_h: float32, out_s: float32, out_v: float32): void {.imgui_lib, importc: "igColorConvertRGBtoHSV".}
proc igBeginMenuBar*(): bool {.imgui_lib, importc: "igBeginMenuBar".}
proc igTextColoredV*(col: ImVec4, fmt: cstring): void {.imgui_lib, importc: "igTextColoredV", varargs.}
proc igIsPopupOpen*(str_id: cstring): bool {.imgui_lib, importc: "igIsPopupOpen".}
proc igIsItemVisible*(): bool {.imgui_lib, importc: "igIsItemVisible".}
proc imFontAtlas_CalcCustomRectUV*(rect: ptr CustomRect, out_uv_min: ptr ImVec2, out_uv_max: ptr ImVec2): void {.imgui_lib, importc: "ImFontAtlas_CalcCustomRectUV".}
proc igTextWrappedV*(fmt: cstring): void {.imgui_lib, importc: "igTextWrappedV", varargs.}
proc imFontAtlas_GetCustomRectByIndex*(index: int32): ptr CustomRect {.imgui_lib, importc: "ImFontAtlas_GetCustomRectByIndex".}
proc glyphRangesBuilder_AddText*(text: cstring, text_end: cstring): void {.imgui_lib, importc: "GlyphRangesBuilder_AddText".}
proc imDrawList_UpdateTextureID*(): void {.imgui_lib, importc: "ImDrawList_UpdateTextureID".}
proc igSetNextWindowSize*(size: ImVec2, cond: ImGuiCond): void {.imgui_lib, importc: "igSetNextWindowSize".}
proc imFontAtlas_AddCustomRectRegular*(id: uint32, width: int32, height: int32): int32 {.imgui_lib, importc: "ImFontAtlas_AddCustomRectRegular".}
proc igSetWindowCollapsed*(collapsed: bool, cond: ImGuiCond): void {.imgui_lib, importc: "igSetWindowCollapsed".}
proc igGetMouseDragDelta*(button: int32, lock_threshold: float32): ImVec2 {.imgui_lib, importc: "igGetMouseDragDelta".}
proc igAcceptDragDropPayload*(`type`: cstring, flags: ImGuiDragDropFlags): ptr ImGuiPayload {.imgui_lib, importc: "igAcceptDragDropPayload".}
proc igBeginDragDropSource*(flags: ImGuiDragDropFlags): bool {.imgui_lib, importc: "igBeginDragDropSource".}
proc customRect_IsPacked*(): bool {.imgui_lib, importc: "CustomRect_IsPacked".}
proc igPlotLines*(label: cstring, values: ptr float32, values_count: int32, values_offset: int32, overlay_text: cstring, scale_min: float32, scale_max: float32, graph_size: ImVec2, stride: int32): void {.imgui_lib, importc: "igPlotLines".}
proc imFontAtlas_IsBuilt*(): bool {.imgui_lib, importc: "ImFontAtlas_IsBuilt".}
proc imVec2_ImVec2*(): void {.imgui_lib, importc: "ImVec2_ImVec2".}
proc imGuiPayload_ImGuiPayload*(): void {.imgui_lib, importc: "ImGuiPayload_ImGuiPayload".}
proc imDrawList_Clear*(): void {.imgui_lib, importc: "ImDrawList_Clear".}
proc glyphRangesBuilder_AddRanges*(ranges: ptr ImWchar): void {.imgui_lib, importc: "GlyphRangesBuilder_AddRanges".}
proc igGetFrameCount*(): int32 {.imgui_lib, importc: "igGetFrameCount".}
proc imFont_GetDebugName*(): cstring {.imgui_lib, importc: "ImFont_GetDebugName".}
proc igListBoxFooter*(): void {.imgui_lib, importc: "igListBoxFooter".}
proc igPopClipRect*(): void {.imgui_lib, importc: "igPopClipRect".}
proc imDrawList_AddBezierCurve*(pos0: ImVec2, cp0: ImVec2, cp1: ImVec2, pos1: ImVec2, col: ImU32, thickness: float32, num_segments: int32): void {.imgui_lib, importc: "ImDrawList_AddBezierCurve".}
proc glyphRangesBuilder_GlyphRangesBuilder*(): void {.imgui_lib, importc: "GlyphRangesBuilder_GlyphRangesBuilder".}
proc igGetWindowSize*(): ImVec2 {.imgui_lib, importc: "igGetWindowSize".}
proc imFontAtlas_GetGlyphRangesThai*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesThai".}
proc igCheckboxFlags*(label: cstring, flags: ptr uint32, flags_value: uint32): bool {.imgui_lib, importc: "igCheckboxFlags".}
proc imFontAtlas_GetGlyphRangesCyrillic*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesCyrillic".}
proc igIsWindowHovered*(flags: ImGuiHoveredFlags): bool {.imgui_lib, importc: "igIsWindowHovered".}
proc imFontAtlas_GetGlyphRangesChineseSimplifiedCommon*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon".}
proc igPlotHistogram*(label: cstring, values: ptr float32, values_count: int32, values_offset: int32, overlay_text: cstring, scale_min: float32, scale_max: float32, graph_size: ImVec2, stride: int32): void {.imgui_lib, importc: "igPlotHistogram".}
proc igBeginPopupContextVoid*(str_id: cstring, mouse_button: int32): bool {.imgui_lib, importc: "igBeginPopupContextVoid".}
proc imFontAtlas_GetGlyphRangesChineseFull*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesChineseFull".}
proc igShowStyleEditor*(`ref`: ptr ImGuiStyle): void {.imgui_lib, importc: "igShowStyleEditor".}
proc igCheckbox*(label: cstring, v: ptr bool): bool {.imgui_lib, importc: "igCheckbox".}
proc igGetWindowPos*(): ImVec2 {.imgui_lib, importc: "igGetWindowPos".}
proc imFontAtlas_DestroyImFontAtlas*(): void {.imgui_lib, importc: "ImFontAtlas_~ImFontAtlas".}
proc imGuiInputTextCallbackData_ImGuiInputTextCallbackData*(): void {.imgui_lib, importc: "ImGuiInputTextCallbackData_ImGuiInputTextCallbackData".}
proc igSetNextWindowContentSize*(size: ImVec2): void {.imgui_lib, importc: "igSetNextWindowContentSize".}
proc igTextColored*(col: ImVec4, fmt: cstring): void {.imgui_lib, importc: "igTextColored", varargs.}
proc igLogToFile*(max_depth: int32, filename: cstring): void {.imgui_lib, importc: "igLogToFile".}
proc igButton*(label: cstring, size: ImVec2): bool {.imgui_lib, importc: "igButton".}
proc igIsItemEdited*(): bool {.imgui_lib, importc: "igIsItemEdited".}
proc igTreeNodeExV*(str_id: cstring, flags: ImGuiTreeNodeFlags, fmt: cstring): bool {.imgui_lib, importc: "igTreeNodeExV", varargs.}
proc imDrawList_PushTextureID*(texture_id: ImTextureID): void {.imgui_lib, importc: "ImDrawList_PushTextureID".}
proc igTreeAdvanceToLabelPos*(): void {.imgui_lib, importc: "igTreeAdvanceToLabelPos".}
proc imGuiInputTextCallbackData_DeleteChars*(pos: int32, bytes_count: int32): void {.imgui_lib, importc: "ImGuiInputTextCallbackData_DeleteChars".}
proc igDragInt2*(label: cstring, v: ptr int, v_speed: float32, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igDragInt2".}
proc imFontAtlas_GetGlyphRangesDefault*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesDefault".}
proc igIsAnyItemActive*(): bool {.imgui_lib, importc: "igIsAnyItemActive".}
proc imFontAtlas_SetTexID*(id: ImTextureID): void {.imgui_lib, importc: "ImFontAtlas_SetTexID".}
proc igMenuItem*(label: cstring, shortcut: cstring, selected: bool, enabled: bool): bool {.imgui_lib, importc: "igMenuItem".}
proc igSliderFloat4*(label: cstring, v: ptr float, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igSliderFloat4".}
proc igGetCursorPosX*(): float32 {.imgui_lib, importc: "igGetCursorPosX".}
proc imFontAtlas_ClearTexData*(): void {.imgui_lib, importc: "ImFontAtlas_ClearTexData".}
proc imFontAtlas_ClearFonts*(): void {.imgui_lib, importc: "ImFontAtlas_ClearFonts".}
proc igGetColumnsCount*(): int32 {.imgui_lib, importc: "igGetColumnsCount".}
proc igPopButtonRepeat*(): void {.imgui_lib, importc: "igPopButtonRepeat".}
proc igDragScalarN*(label: cstring, data_type: ImGuiDataType, v: pointer, components: int32, v_speed: float32, v_min: pointer, v_max: pointer, format: cstring, power: float32): bool {.imgui_lib, importc: "igDragScalarN".}
proc imGuiPayload_IsPreview*(): bool {.imgui_lib, importc: "ImGuiPayload_IsPreview".}
proc igSpacing*(): void {.imgui_lib, importc: "igSpacing".}
proc imFontAtlas_Clear*(): void {.imgui_lib, importc: "ImFontAtlas_Clear".}
proc igIsAnyItemFocused*(): bool {.imgui_lib, importc: "igIsAnyItemFocused".}
proc imDrawList_AddRectFilled*(a: ImVec2, b: ImVec2, col: ImU32, rounding: float32, rounding_corners_flags: int32): void {.imgui_lib, importc: "ImDrawList_AddRectFilled".}
proc imFontAtlas_AddFontFromMemoryCompressedTTF*(compressed_font_data: pointer, compressed_font_size: int32, size_pixels: float32, font_cfg: ptr ImFontConfig, glyph_ranges: ptr ImWchar): ptr ImFont {.imgui_lib, importc: "ImFontAtlas_AddFontFromMemoryCompressedTTF".}
proc igMemFree*(`ptr`: pointer): void {.imgui_lib, importc: "igMemFree".}
proc igGetFontTexUvWhitePixel*(): ImVec2 {.imgui_lib, importc: "igGetFontTexUvWhitePixel".}
proc imDrawList_AddDrawCmd*(): void {.imgui_lib, importc: "ImDrawList_AddDrawCmd".}
proc igIsItemClicked*(mouse_button: int32): bool {.imgui_lib, importc: "igIsItemClicked".}
proc imFontAtlas_AddFontFromMemoryTTF*(font_data: pointer, font_size: int32, size_pixels: float32, font_cfg: ptr ImFontConfig, glyph_ranges: ptr ImWchar): ptr ImFont {.imgui_lib, importc: "ImFontAtlas_AddFontFromMemoryTTF".}
proc imFontAtlas_AddFontFromFileTTF*(filename: cstring, size_pixels: float32, font_cfg: ptr ImFontConfig, glyph_ranges: ptr ImWchar): ptr ImFont {.imgui_lib, importc: "ImFontAtlas_AddFontFromFileTTF".}
proc igProgressBar*(fraction: float32, size_arg: ImVec2, overlay: cstring): void {.imgui_lib, importc: "igProgressBar".}
proc imFontAtlas_AddFontDefault*(font_cfg: ptr ImFontConfig): ptr ImFont {.imgui_lib, importc: "ImFontAtlas_AddFontDefault".}
proc igSetNextWindowBgAlpha*(alpha: float32): void {.imgui_lib, importc: "igSetNextWindowBgAlpha".}
proc igBeginPopup*(str_id: cstring, flags: ImGuiWindowFlags): bool {.imgui_lib, importc: "igBeginPopup".}
proc imFont_BuildLookupTable*(): void {.imgui_lib, importc: "ImFont_BuildLookupTable".}
proc igGetScrollX*(): float32 {.imgui_lib, importc: "igGetScrollX".}
proc igGetKeyIndex*(imgui_key: ImGuiKey): int32 {.imgui_lib, importc: "igGetKeyIndex".}
proc igGetOverlayDrawList*(): ptr ImDrawList {.imgui_lib, importc: "igGetOverlayDrawList".}
proc igGetID*(str_id: cstring): ImGuiID {.imgui_lib, importc: "igGetID".}
proc imFontAtlas_GetGlyphRangesJapanese*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesJapanese".}
proc igListBoxHeader*(label: cstring, size: ImVec2): bool {.imgui_lib, importc: "igListBoxHeader".}
proc imFontConfig_ImFontConfig*(): void {.imgui_lib, importc: "ImFontConfig_ImFontConfig".}
proc igIsMouseReleased*(button: int32): bool {.imgui_lib, importc: "igIsMouseReleased".}
proc imDrawData_ScaleClipRects*(sc: ImVec2): void {.imgui_lib, importc: "ImDrawData_ScaleClipRects".}
proc igGetItemRectMin*(): ImVec2 {.imgui_lib, importc: "igGetItemRectMin".}
proc imDrawData_DeIndexAllBuffers*(): void {.imgui_lib, importc: "ImDrawData_DeIndexAllBuffers".}
proc igLogText*(fmt: cstring): void {.imgui_lib, importc: "igLogText", varargs.}
proc imDrawData_Clear*(): void {.imgui_lib, importc: "ImDrawData_Clear".}
proc imGuiStorage_GetVoidPtr*(key: ImGuiID): pointer {.imgui_lib, importc: "ImGuiStorage_GetVoidPtr".}
proc imDrawData_DestroyImDrawData*(): void {.imgui_lib, importc: "ImDrawData_~ImDrawData".}
proc igTextWrapped*(fmt: cstring): void {.imgui_lib, importc: "igTextWrapped", varargs.}
proc imDrawList_UpdateClipRect*(): void {.imgui_lib, importc: "ImDrawList_UpdateClipRect".}
proc imDrawList_PrimVtx*(pos: ImVec2, uv: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_PrimVtx".}
proc igEndGroup*(): void {.imgui_lib, importc: "igEndGroup".}
proc igGetFont*(): ptr ImFont {.imgui_lib, importc: "igGetFont".}
proc igTreePush*(str_id: cstring): void {.imgui_lib, importc: "igTreePush".}
proc igTextDisabled*(fmt: cstring): void {.imgui_lib, importc: "igTextDisabled", varargs.}
proc imDrawList_PrimRect*(a: ImVec2, b: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_PrimRect".}
proc imDrawList_AddQuad*(a: ImVec2, b: ImVec2, c: ImVec2, d: ImVec2, col: ImU32, thickness: float32): void {.imgui_lib, importc: "ImDrawList_AddQuad".}
proc imDrawList_ClearFreeMemory*(): void {.imgui_lib, importc: "ImDrawList_ClearFreeMemory".}
proc igSetNextTreeNodeOpen*(is_open: bool, cond: ImGuiCond): void {.imgui_lib, importc: "igSetNextTreeNodeOpen".}
proc igLogToTTY*(max_depth: int32): void {.imgui_lib, importc: "igLogToTTY".}
proc glyphRangesBuilder_BuildRanges*(out_ranges: ptr ImVector): void {.imgui_lib, importc: "GlyphRangesBuilder_BuildRanges".}
proc igSetTooltipV*(fmt: cstring): void {.imgui_lib, importc: "igSetTooltipV", varargs.}
proc imDrawList_CloneOutput*(): ptr ImDrawList {.imgui_lib, importc: "ImDrawList_CloneOutput".}
proc igGetIO*(): ptr ImGuiIO {.imgui_lib, importc: "igGetIO".}
proc igDragInt4*(label: cstring, v: ptr int, v_speed: float32, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igDragInt4".}
proc igNextColumn*(): void {.imgui_lib, importc: "igNextColumn".}
proc imDrawList_AddRect*(a: ImVec2, b: ImVec2, col: ImU32, rounding: float32, rounding_corners_flags: int32, thickness: float32): void {.imgui_lib, importc: "ImDrawList_AddRect".}
proc textRange_split*(separator: char, `out`: ptr ImVector): void {.imgui_lib, importc: "TextRange_split".}
proc igSetCursorPos*(local_pos: ImVec2): void {.imgui_lib, importc: "igSetCursorPos".}
proc igBeginPopupModal*(name: cstring, p_open: ptr bool, flags: ImGuiWindowFlags): bool {.imgui_lib, importc: "igBeginPopupModal".}
proc igSliderInt4*(label: cstring, v: ptr int, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igSliderInt4".}
proc imDrawList_AddCallback*(callback: ImDrawCallback, callback_data: pointer): void {.imgui_lib, importc: "ImDrawList_AddCallback".}
proc igShowMetricsWindow*(p_open: ptr bool): void {.imgui_lib, importc: "igShowMetricsWindow".}
proc igGetScrollMaxY*(): float32 {.imgui_lib, importc: "igGetScrollMaxY".}
proc igBeginTooltip*(): void {.imgui_lib, importc: "igBeginTooltip".}
proc igSetScrollX*(scroll_x: float32): void {.imgui_lib, importc: "igSetScrollX".}
proc igGetDrawData*(): ptr ImDrawData {.imgui_lib, importc: "igGetDrawData".}
proc igGetTextLineHeight*(): float32 {.imgui_lib, importc: "igGetTextLineHeight".}
proc igSeparator*(): void {.imgui_lib, importc: "igSeparator".}
proc igBeginChild*(str_id: cstring, size: ImVec2, border: bool, flags: ImGuiWindowFlags): bool {.imgui_lib, importc: "igBeginChild".}
proc imDrawList_PathRect*(rect_min: ImVec2, rect_max: ImVec2, rounding: float32, rounding_corners_flags: int32): void {.imgui_lib, importc: "ImDrawList_PathRect".}
proc igIsMouseClicked*(button: int32, repeat: bool): bool {.imgui_lib, importc: "igIsMouseClicked".}
proc igCalcItemWidth*(): float32 {.imgui_lib, importc: "igCalcItemWidth".}
proc imGuiTextBuffer_appendfv*(fmt: cstring): void {.imgui_lib, importc: "ImGuiTextBuffer_appendfv", varargs.}
proc imDrawList_PathArcToFast*(centre: ImVec2, radius: float32, a_min_of_12: int32, a_max_of_12: int32): void {.imgui_lib, importc: "ImDrawList_PathArcToFast".}
proc igEndChildFrame*(): void {.imgui_lib, importc: "igEndChildFrame".}
proc igIndent*(indent_w: float32): void {.imgui_lib, importc: "igIndent".}
proc igSetDragDropPayload*(`type`: cstring, data: pointer, size: uint32, cond: ImGuiCond): bool {.imgui_lib, importc: "igSetDragDropPayload".}
proc glyphRangesBuilder_GetBit*(n: int32): bool {.imgui_lib, importc: "GlyphRangesBuilder_GetBit".}
proc imGuiTextFilter_Draw*(label: cstring, width: float32): bool {.imgui_lib, importc: "ImGuiTextFilter_Draw".}
proc igShowDemoWindow*(p_open: ptr bool): void {.imgui_lib, importc: "igShowDemoWindow".}
proc imDrawList_PathStroke*(col: ImU32, closed: bool, thickness: float32): void {.imgui_lib, importc: "ImDrawList_PathStroke".}
proc imDrawList_PathFillConvex*(col: ImU32): void {.imgui_lib, importc: "ImDrawList_PathFillConvex".}
proc imDrawList_PathLineToMergeDuplicate*(pos: ImVec2): void {.imgui_lib, importc: "ImDrawList_PathLineToMergeDuplicate".}
proc igEndMenu*(): void {.imgui_lib, importc: "igEndMenu".}
proc igColorButton*(desc_id: cstring, col: ImVec4, flags: ImGuiColorEditFlags, size: ImVec2): bool {.imgui_lib, importc: "igColorButton".}
proc imFontAtlas_GetTexDataAsAlpha8*(out_pixels: ptr ptr char, out_width: ptr int32, out_height: ptr int32, out_bytes_per_pixel: ptr int32): void {.imgui_lib, importc: "ImFontAtlas_GetTexDataAsAlpha8".}
proc igIsKeyReleased*(user_key_index: int32): bool {.imgui_lib, importc: "igIsKeyReleased".}
proc igSetClipboardText*(text: cstring): void {.imgui_lib, importc: "igSetClipboardText".}
proc imDrawList_PathArcTo*(centre: ImVec2, radius: float32, a_min: float32, a_max: float32, num_segments: int32): void {.imgui_lib, importc: "ImDrawList_PathArcTo".}
proc imDrawList_AddConvexPolyFilled*(points: ptr ImVec2, num_points: int32, col: ImU32): void {.imgui_lib, importc: "ImDrawList_AddConvexPolyFilled".}
proc igIsWindowCollapsed*(): bool {.imgui_lib, importc: "igIsWindowCollapsed".}
proc igShowFontSelector*(label: cstring): void {.imgui_lib, importc: "igShowFontSelector".}
proc imDrawList_AddImageQuad*(user_texture_id: ImTextureID, a: ImVec2, b: ImVec2, c: ImVec2, d: ImVec2, uv_a: ImVec2, uv_b: ImVec2, uv_c: ImVec2, uv_d: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_AddImageQuad".}
proc igSetNextWindowFocus*(): void {.imgui_lib, importc: "igSetNextWindowFocus".}
proc igSameLine*(pos_x: float32, spacing_w: float32): void {.imgui_lib, importc: "igSameLine".}
proc igBegin*(name: cstring, p_open: ptr bool, flags: ImGuiWindowFlags): bool {.imgui_lib, importc: "igBegin".}
proc igColorEdit3*(label: cstring, col: ptr float, flags: ImGuiColorEditFlags): bool {.imgui_lib, importc: "igColorEdit3".}
proc imDrawList_AddImage*(user_texture_id: ImTextureID, a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_AddImage".}
proc imGuiIO_AddInputCharactersUTF8*(utf8_chars: cstring): void {.imgui_lib, importc: "ImGuiIO_AddInputCharactersUTF8".}
proc imDrawList_AddText*(pos: ImVec2, col: ImU32, text_begin: cstring, text_end: cstring): void {.imgui_lib, importc: "ImDrawList_AddText".}
proc imDrawList_AddCircleFilled*(centre: ImVec2, radius: float32, col: ImU32, num_segments: int32): void {.imgui_lib, importc: "ImDrawList_AddCircleFilled".}
proc igInputFloat2*(label: cstring, v: ptr float, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputFloat2".}
proc igPushButtonRepeat*(repeat: bool): void {.imgui_lib, importc: "igPushButtonRepeat".}
proc igPopItemWidth*(): void {.imgui_lib, importc: "igPopItemWidth".}
proc imDrawList_AddCircle*(centre: ImVec2, radius: float32, col: ImU32, num_segments: int32, thickness: float32): void {.imgui_lib, importc: "ImDrawList_AddCircle".}
proc imDrawList_AddTriangleFilled*(a: ImVec2, b: ImVec2, c: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_AddTriangleFilled".}
proc imDrawList_AddTriangle*(a: ImVec2, b: ImVec2, c: ImVec2, col: ImU32, thickness: float32): void {.imgui_lib, importc: "ImDrawList_AddTriangle".}
proc imDrawList_AddQuadFilled*(a: ImVec2, b: ImVec2, c: ImVec2, d: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_AddQuadFilled".}
proc igGetFontSize*(): float32 {.imgui_lib, importc: "igGetFontSize".}
proc igInputDouble*(label: cstring, v: ptr float64, step: float64, step_fast: float64, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputDouble".}
proc imDrawList_PrimReserve*(idx_count: int32, vtx_count: int32): void {.imgui_lib, importc: "ImDrawList_PrimReserve".}
proc imDrawList_AddRectFilledMultiColor*(a: ImVec2, b: ImVec2, col_upr_left: ImU32, col_upr_right: ImU32, col_bot_right: ImU32, col_bot_left: ImU32): void {.imgui_lib, importc: "ImDrawList_AddRectFilledMultiColor".}
proc igEndPopup*(): void {.imgui_lib, importc: "igEndPopup".}
proc imFontAtlas_ClearInputData*(): void {.imgui_lib, importc: "ImFontAtlas_ClearInputData".}
proc imDrawList_AddLine*(a: ImVec2, b: ImVec2, col: ImU32, thickness: float32): void {.imgui_lib, importc: "ImDrawList_AddLine".}
proc igInputTextMultiline*(label: cstring, buf: cstring, buf_size: uint32, size: ImVec2, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: pointer): bool {.imgui_lib, importc: "igInputTextMultiline".}
proc igSelectable*(label: cstring, selected: bool, flags: ImGuiSelectableFlags, size: ImVec2): bool {.imgui_lib, importc: "igSelectable".}
proc igListBox*(label: cstring, current_item: ptr int32, items: ptr ptr char , items_count: int32, height_in_items: int32): bool {.imgui_lib, importc: "igListBox".}
proc igGetCursorPos*(): ImVec2 {.imgui_lib, importc: "igGetCursorPos".}
proc imDrawList_GetClipRectMin*(): ImVec2 {.imgui_lib, importc: "ImDrawList_GetClipRectMin".}
proc imDrawList_PopTextureID*(): void {.imgui_lib, importc: "ImDrawList_PopTextureID".}
proc igInputFloat4*(label: cstring, v: ptr float, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputFloat4".}
proc igSetCursorPosY*(y: float32): void {.imgui_lib, importc: "igSetCursorPosY".}
proc igGetVersion*(): cstring {.imgui_lib, importc: "igGetVersion".}
proc igEndCombo*(): void {.imgui_lib, importc: "igEndCombo".}
proc imDrawList_DestroyImDrawList*(): void {.imgui_lib, importc: "ImDrawList_~ImDrawList".}
proc igPushID*(str_id: cstring): void {.imgui_lib, importc: "igPushID".}
proc imDrawList_ImDrawList*(shared_data: ptr ImDrawListSharedData): void {.imgui_lib, importc: "ImDrawList_ImDrawList".}
proc imDrawCmd_ImDrawCmd*(): void {.imgui_lib, importc: "ImDrawCmd_ImDrawCmd".}
proc imGuiListClipper_End*(): void {.imgui_lib, importc: "ImGuiListClipper_End".}
proc igAlignTextToFramePadding*(): void {.imgui_lib, importc: "igAlignTextToFramePadding".}
proc igPopStyleColor*(count: int32): void {.imgui_lib, importc: "igPopStyleColor".}
proc imGuiListClipper_Begin*(items_count: int32, items_height: float32): void {.imgui_lib, importc: "ImGuiListClipper_Begin".}
proc igText*(fmt: cstring): void {.imgui_lib, importc: "igText", varargs.}
proc imGuiListClipper_Step*(): bool {.imgui_lib, importc: "ImGuiListClipper_Step".}
proc igGetTextLineHeightWithSpacing*(): float32 {.imgui_lib, importc: "igGetTextLineHeightWithSpacing".}
proc imGuiListClipper_DestroyImGuiListClipper*(): void {.imgui_lib, importc: "ImGuiListClipper_~ImGuiListClipper".}
proc imGuiStorage_GetFloatRef*(key: ImGuiID, default_val: float32): ptr float32 {.imgui_lib, importc: "ImGuiStorage_GetFloatRef".}
proc igEndTooltip*(): void {.imgui_lib, importc: "igEndTooltip".}
proc imGuiListClipper_ImGuiListClipper*(items_count: int32, items_height: float32): void {.imgui_lib, importc: "ImGuiListClipper_ImGuiListClipper".}
proc igDragInt*(label: cstring, v: ptr int32, v_speed: float32, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igDragInt".}
proc igSliderFloat*(label: cstring, v: ptr float32, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igSliderFloat".}
proc igColorConvertFloat4ToU32*(`in`: ImVec4): ImU32 {.imgui_lib, importc: "igColorConvertFloat4ToU32".}
proc imGuiIO_ClearInputCharacters*(): void {.imgui_lib, importc: "ImGuiIO_ClearInputCharacters".}
proc igPushClipRect*(clip_rect_min: ImVec2, clip_rect_max: ImVec2, intersect_with_current_clip_rect: bool): void {.imgui_lib, importc: "igPushClipRect".}
proc igSetColumnWidth*(column_index: int32, width: float32): void {.imgui_lib, importc: "igSetColumnWidth".}
proc imGuiPayload_IsDataType*(`type`: cstring): bool {.imgui_lib, importc: "ImGuiPayload_IsDataType".}
proc igBeginMainMenuBar*(): bool {.imgui_lib, importc: "igBeginMainMenuBar".}
proc customRect_CustomRect*(): void {.imgui_lib, importc: "CustomRect_CustomRect".}
proc imGuiInputTextCallbackData_HasSelection*(): bool {.imgui_lib, importc: "ImGuiInputTextCallbackData_HasSelection".}
proc imGuiInputTextCallbackData_InsertChars*(pos: int32, text: cstring, text_end: cstring): void {.imgui_lib, importc: "ImGuiInputTextCallbackData_InsertChars".}
proc imFontAtlas_GetMouseCursorTexData*(cursor: ImGuiMouseCursor, out_offset: ptr ImVec2, out_size: ptr ImVec2, out_uv_border: ptr ImVec2, out_uv_fill: ptr ImVec2): bool {.imgui_lib, importc: "ImFontAtlas_GetMouseCursorTexData".}
proc igVSliderScalar*(label: cstring, size: ImVec2, data_type: ImGuiDataType, v: pointer, v_min: pointer, v_max: pointer, format: cstring, power: float32): bool {.imgui_lib, importc: "igVSliderScalar".}
proc imGuiStorage_SetAllInt*(val: int32): void {.imgui_lib, importc: "ImGuiStorage_SetAllInt".}
proc imGuiStorage_GetVoidPtrRef*(key: ImGuiID, default_val: pointer): ptr pointer {.imgui_lib, importc: "ImGuiStorage_GetVoidPtrRef".}
proc igStyleColorsLight*(dst: ptr ImGuiStyle): void {.imgui_lib, importc: "igStyleColorsLight".}
proc igSliderFloat3*(label: cstring, v: ptr float, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igSliderFloat3".}
proc igDragFloat*(label: cstring, v: ptr float32, v_speed: float32, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igDragFloat".}
proc imGuiStorage_GetBoolRef*(key: ImGuiID, default_val: bool): ptr bool {.imgui_lib, importc: "ImGuiStorage_GetBoolRef".}
proc igGetWindowHeight*(): float32 {.imgui_lib, importc: "igGetWindowHeight".}
proc igGetMousePosOnOpeningCurrentPopup*(): ImVec2 {.imgui_lib, importc: "igGetMousePosOnOpeningCurrentPopup".}
proc imGuiStorage_GetIntRef*(key: ImGuiID, default_val: int32): ptr int32 {.imgui_lib, importc: "ImGuiStorage_GetIntRef".}
proc igCalcListClipping*(items_count: int32, items_height: float32, out_items_display_start: ptr int32, out_items_display_end: ptr int32): void {.imgui_lib, importc: "igCalcListClipping".}
proc imGuiStorage_SetVoidPtr*(key: ImGuiID, val: pointer): void {.imgui_lib, importc: "ImGuiStorage_SetVoidPtr".}
proc igEndDragDropSource*(): void {.imgui_lib, importc: "igEndDragDropSource".}
proc imGuiStorage_BuildSortByKey*(): void {.imgui_lib, importc: "ImGuiStorage_BuildSortByKey".}
proc imGuiStorage_GetFloat*(key: ImGuiID, default_val: float32): float32 {.imgui_lib, importc: "ImGuiStorage_GetFloat".}
proc imGuiStorage_SetBool*(key: ImGuiID, val: bool): void {.imgui_lib, importc: "ImGuiStorage_SetBool".}
proc imGuiStorage_GetBool*(key: ImGuiID, default_val: bool): bool {.imgui_lib, importc: "ImGuiStorage_GetBool".}
proc igLabelTextV*(label: cstring, fmt: cstring): void {.imgui_lib, importc: "igLabelTextV", varargs.}
proc igGetFrameHeightWithSpacing*(): float32 {.imgui_lib, importc: "igGetFrameHeightWithSpacing".}
proc imGuiStorage_SetInt*(key: ImGuiID, val: int32): void {.imgui_lib, importc: "ImGuiStorage_SetInt".}
proc igCloseCurrentPopup*(): void {.imgui_lib, importc: "igCloseCurrentPopup".}
proc imGuiTextBuffer_clear*(): void {.imgui_lib, importc: "ImGuiTextBuffer_clear".}
proc igBeginGroup*(): void {.imgui_lib, importc: "igBeginGroup".}
proc imGuiStorage_Clear*(): void {.imgui_lib, importc: "ImGuiStorage_Clear".}
proc pair_Pair*(key: ImGuiID, val_i: int32): void {.imgui_lib, importc: "Pair_Pair".}
proc imGuiTextBuffer_appendf*(fmt: cstring): void {.imgui_lib, importc: "ImGuiTextBuffer_appendf", varargs.}
proc imGuiTextBuffer_c_str*(): cstring {.imgui_lib, importc: "ImGuiTextBuffer_c_str".}
proc imGuiTextBuffer_reserve*(capacity: int32): void {.imgui_lib, importc: "ImGuiTextBuffer_reserve".}
proc imGuiTextBuffer_empty*(): bool {.imgui_lib, importc: "ImGuiTextBuffer_empty".}
proc igSliderScalar*(label: cstring, data_type: ImGuiDataType, v: pointer, v_min: pointer, v_max: pointer, format: cstring, power: float32): bool {.imgui_lib, importc: "igSliderScalar".}
proc igBeginCombo*(label: cstring, preview_value: cstring, flags: ImGuiComboFlags): bool {.imgui_lib, importc: "igBeginCombo".}
proc imGuiTextBuffer_size*(): int32 {.imgui_lib, importc: "ImGuiTextBuffer_size".}
proc igBeginMenu*(label: cstring, enabled: bool): bool {.imgui_lib, importc: "igBeginMenu".}
proc igIsItemHovered*(flags: ImGuiHoveredFlags): bool {.imgui_lib, importc: "igIsItemHovered".}
proc imDrawList_PrimWriteVtx*(pos: ImVec2, uv: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_PrimWriteVtx".}
proc igBullet*(): void {.imgui_lib, importc: "igBullet".}
proc igInputText*(label: cstring, buf: cstring, buf_size: uint32, flags: ImGuiInputTextFlags, callback: ImGuiInputTextCallback, user_data: pointer): bool {.imgui_lib, importc: "igInputText".}
proc igInputInt3*(label: cstring, v: ptr int, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputInt3".}
proc imGuiIO_ImGuiIO*(): void {.imgui_lib, importc: "ImGuiIO_ImGuiIO".}
proc igStyleColorsDark*(dst: ptr ImGuiStyle): void {.imgui_lib, importc: "igStyleColorsDark".}
proc igInputInt*(label: cstring, v: ptr int32, step: int32, step_fast: int32, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputInt".}
proc igSetWindowFontScale*(scale: float32): void {.imgui_lib, importc: "igSetWindowFontScale".}
proc igSliderInt*(label: cstring, v: ptr int32, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igSliderInt".}
proc textRange_end*(): cstring {.imgui_lib, importc: "TextRange_end".}
proc textRange_begin*(): cstring {.imgui_lib, importc: "TextRange_begin".}
proc igSetNextWindowPos*(pos: ImVec2, cond: ImGuiCond, pivot: ImVec2): void {.imgui_lib, importc: "igSetNextWindowPos".}
proc igDragInt3*(label: cstring, v: ptr int, v_speed: float32, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igDragInt3".}
proc igOpenPopup*(str_id: cstring): void {.imgui_lib, importc: "igOpenPopup".}
proc textRange_TextRange*(): void {.imgui_lib, importc: "TextRange_TextRange".}
proc imDrawList_GetClipRectMax*(): ImVec2 {.imgui_lib, importc: "ImDrawList_GetClipRectMax".}
proc igCalcTextSize*(text: cstring, text_end: cstring, hide_text_after_double_hash: bool, wrap_width: float32): ImVec2 {.imgui_lib, importc: "igCalcTextSize".}
proc igGetDrawListSharedData*(): ptr ImDrawListSharedData {.imgui_lib, importc: "igGetDrawListSharedData".}
proc igColumns*(count: int32, id: cstring, border: bool): void {.imgui_lib, importc: "igColumns".}
proc igIsItemActive*(): bool {.imgui_lib, importc: "igIsItemActive".}
proc imGuiTextFilter_ImGuiTextFilter*(default_filter: cstring): void {.imgui_lib, importc: "ImGuiTextFilter_ImGuiTextFilter".}
proc imGuiOnceUponAFrame_ImGuiOnceUponAFrame*(): void {.imgui_lib, importc: "ImGuiOnceUponAFrame_ImGuiOnceUponAFrame".}
proc igBeginDragDropTarget*(): bool {.imgui_lib, importc: "igBeginDragDropTarget".}
proc textRange_empty*(): bool {.imgui_lib, importc: "TextRange_empty".}
proc imGuiPayload_IsDelivery*(): bool {.imgui_lib, importc: "ImGuiPayload_IsDelivery".}
proc imGuiIO_AddInputCharacter*(c: ImWchar): void {.imgui_lib, importc: "ImGuiIO_AddInputCharacter".}
proc imDrawList_AddImageRounded*(user_texture_id: ImTextureID, a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, col: ImU32, rounding: float32, rounding_corners: int32): void {.imgui_lib, importc: "ImDrawList_AddImageRounded".}
proc imGuiStyle_ImGuiStyle*(): void {.imgui_lib, importc: "ImGuiStyle_ImGuiStyle".}
proc igColorPicker3*(label: cstring, col: ptr float, flags: ImGuiColorEditFlags): bool {.imgui_lib, importc: "igColorPicker3".}
proc igGetContentRegionMax*(): ImVec2 {.imgui_lib, importc: "igGetContentRegionMax".}
proc igBeginChildFrame*(id: ImGuiID, size: ImVec2, flags: ImGuiWindowFlags): bool {.imgui_lib, importc: "igBeginChildFrame".}
proc igSaveIniSettingsToDisk*(ini_filename: cstring): void {.imgui_lib, importc: "igSaveIniSettingsToDisk".}
proc imFont_ClearOutputData*(): void {.imgui_lib, importc: "ImFont_ClearOutputData".}
proc igGetClipboardText*(): cstring {.imgui_lib, importc: "igGetClipboardText".}
proc imDrawList_PrimQuadUV*(a: ImVec2, b: ImVec2, c: ImVec2, d: ImVec2, uv_a: ImVec2, uv_b: ImVec2, uv_c: ImVec2, uv_d: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_PrimQuadUV".}
proc igEndDragDropTarget*(): void {.imgui_lib, importc: "igEndDragDropTarget".}
proc imFontAtlas_GetGlyphRangesKorean*(): ptr ImWchar {.imgui_lib, importc: "ImFontAtlas_GetGlyphRangesKorean".}
proc igGetKeyPressedAmount*(key_index: int32, repeat_delay: float32, rate: float32): int32 {.imgui_lib, importc: "igGetKeyPressedAmount".}
proc imFontAtlas_GetTexDataAsRGBA32*(out_pixels: ptr ptr char, out_width: ptr int32, out_height: ptr int32, out_bytes_per_pixel: ptr int32): void {.imgui_lib, importc: "ImFontAtlas_GetTexDataAsRGBA32".}
proc igNewFrame*(): void {.imgui_lib, importc: "igNewFrame".}
proc igResetMouseDragDelta*(button: int32): void {.imgui_lib, importc: "igResetMouseDragDelta".}
proc igGetTreeNodeToLabelSpacing*(): float32 {.imgui_lib, importc: "igGetTreeNodeToLabelSpacing".}
proc igGetMousePos*(): ImVec2 {.imgui_lib, importc: "igGetMousePos".}
proc glyphRangesBuilder_AddChar*(c: ImWchar): void {.imgui_lib, importc: "GlyphRangesBuilder_AddChar".}
proc igPopID*(): void {.imgui_lib, importc: "igPopID".}
proc igIsMouseDoubleClicked*(button: int32): bool {.imgui_lib, importc: "igIsMouseDoubleClicked".}
proc igStyleColorsClassic*(dst: ptr ImGuiStyle): void {.imgui_lib, importc: "igStyleColorsClassic".}
proc imGuiTextFilter_IsActive*(): bool {.imgui_lib, importc: "ImGuiTextFilter_IsActive".}
proc imDrawList_PathClear*(): void {.imgui_lib, importc: "ImDrawList_PathClear".}
proc igSetWindowFocus*(): void {.imgui_lib, importc: "igSetWindowFocus".}
proc igColorConvertHSVtoRGB*(h: float32, s: float32, v: float32, out_r: float32, out_g: float32, out_b: float32): void {.imgui_lib, importc: "igColorConvertHSVtoRGB".}
proc imColor_ImColor*(): void {.imgui_lib, importc: "ImColor_ImColor".}
proc igVSliderFloat*(label: cstring, size: ImVec2, v: ptr float32, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igVSliderFloat".}
proc igColorConvertU32ToFloat4*(`in`: ImU32): ImVec4 {.imgui_lib, importc: "igColorConvertU32ToFloat4".}
proc igPopTextWrapPos*(): void {.imgui_lib, importc: "igPopTextWrapPos".}
proc imGuiTextFilter_Clear*(): void {.imgui_lib, importc: "ImGuiTextFilter_Clear".}
proc igGetStateStorage*(): ptr ImGuiStorage {.imgui_lib, importc: "igGetStateStorage".}
proc igGetColumnWidth*(column_index: int32): float32 {.imgui_lib, importc: "igGetColumnWidth".}
proc igEndMenuBar*(): void {.imgui_lib, importc: "igEndMenuBar".}
proc igSetStateStorage*(storage: ptr ImGuiStorage): void {.imgui_lib, importc: "igSetStateStorage".}
proc igGetStyleColorName*(idx: ImGuiCol): cstring {.imgui_lib, importc: "igGetStyleColorName".}
proc igIsMouseDragging*(button: int32, lock_threshold: float32): bool {.imgui_lib, importc: "igIsMouseDragging".}
proc imDrawList_PrimWriteIdx*(idx: ImDrawIdx): void {.imgui_lib, importc: "ImDrawList_PrimWriteIdx".}
proc imGuiStyle_ScaleAllSizes*(scale_factor: float32): void {.imgui_lib, importc: "ImGuiStyle_ScaleAllSizes".}
proc igPushStyleColor*(idx: ImGuiCol, col: ImU32): void {.imgui_lib, importc: "igPushStyleColor".}
proc igMemAlloc*(size: uint32): pointer {.imgui_lib, importc: "igMemAlloc".}
proc igSetCurrentContext*(ctx: ptr ImGuiContext): void {.imgui_lib, importc: "igSetCurrentContext".}
proc igPushItemWidth*(item_width: float32): void {.imgui_lib, importc: "igPushItemWidth".}
proc igIsWindowAppearing*(): bool {.imgui_lib, importc: "igIsWindowAppearing".}
proc igGetStyle*(): ptr ImGuiStyle {.imgui_lib, importc: "igGetStyle".}
proc igSetItemAllowOverlap*(): void {.imgui_lib, importc: "igSetItemAllowOverlap".}
proc igEndChild*(): void {.imgui_lib, importc: "igEndChild".}
proc igCollapsingHeader*(label: cstring, flags: ImGuiTreeNodeFlags): bool {.imgui_lib, importc: "igCollapsingHeader".}
proc igTextDisabledV*(fmt: cstring): void {.imgui_lib, importc: "igTextDisabledV", varargs.}
proc igDragFloatRange2*(label: cstring, v_current_min: ptr float32, v_current_max: ptr float32, v_speed: float32, v_min: float32, v_max: float32, format: cstring, format_max: cstring, power: float32): bool {.imgui_lib, importc: "igDragFloatRange2".}
proc igSetMouseCursor*(`type`: ImGuiMouseCursor): void {.imgui_lib, importc: "igSetMouseCursor".}
proc igGetWindowContentRegionMax*(): ImVec2 {.imgui_lib, importc: "igGetWindowContentRegionMax".}
proc igInputScalar*(label: cstring, data_type: ImGuiDataType, v: pointer, step: pointer, step_fast: pointer, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputScalar".}
proc imDrawList_PushClipRectFullScreen*(): void {.imgui_lib, importc: "ImDrawList_PushClipRectFullScreen".}
proc igGetColorU32*(idx: ImGuiCol, alpha_mul: float32): ImU32 {.imgui_lib, importc: "igGetColorU32".}
proc igGetTime*(): float64 {.imgui_lib, importc: "igGetTime".}
proc imDrawList_ChannelsMerge*(): void {.imgui_lib, importc: "ImDrawList_ChannelsMerge".}
proc igGetColumnIndex*(): int32 {.imgui_lib, importc: "igGetColumnIndex".}
proc igBeginPopupContextItem*(str_id: cstring, mouse_button: int32): bool {.imgui_lib, importc: "igBeginPopupContextItem".}
proc igSetCursorPosX*(x: float32): void {.imgui_lib, importc: "igSetCursorPosX".}
proc igGetItemRectSize*(): ImVec2 {.imgui_lib, importc: "igGetItemRectSize".}
proc igArrowButton*(str_id: cstring, dir: ImGuiDir): bool {.imgui_lib, importc: "igArrowButton".}
proc igGetMouseCursor*(): ImGuiMouseCursor {.imgui_lib, importc: "igGetMouseCursor".}
proc igPushAllowKeyboardFocus*(allow_keyboard_focus: bool): void {.imgui_lib, importc: "igPushAllowKeyboardFocus".}
proc igGetScrollY*(): float32 {.imgui_lib, importc: "igGetScrollY".}
proc igSetColumnOffset*(column_index: int32, offset_x: float32): void {.imgui_lib, importc: "igSetColumnOffset".}
proc imGuiTextBuffer_begin*(): cstring {.imgui_lib, importc: "ImGuiTextBuffer_begin".}
proc igSetWindowPos*(pos: ImVec2, cond: ImGuiCond): void {.imgui_lib, importc: "igSetWindowPos".}
proc igSetKeyboardFocusHere*(offset: int32): void {.imgui_lib, importc: "igSetKeyboardFocusHere".}
proc igGetCursorPosY*(): float32 {.imgui_lib, importc: "igGetCursorPosY".}
proc imFontAtlas_AddCustomRectFontGlyph*(font: ptr ImFont, id: ImWchar, width: int32, height: int32, advance_x: float32, offset: ImVec2): int32 {.imgui_lib, importc: "ImFontAtlas_AddCustomRectFontGlyph".}
proc igEndMainMenuBar*(): void {.imgui_lib, importc: "igEndMainMenuBar".}
proc igBulletTextV*(fmt: cstring): void {.imgui_lib, importc: "igBulletTextV", varargs.}
proc igGetContentRegionAvailWidth*(): float32 {.imgui_lib, importc: "igGetContentRegionAvailWidth".}
proc igTextV*(fmt: cstring): void {.imgui_lib, importc: "igTextV", varargs.}
proc igIsKeyDown*(user_key_index: int32): bool {.imgui_lib, importc: "igIsKeyDown".}
proc igIsMouseDown*(button: int32): bool {.imgui_lib, importc: "igIsMouseDown".}
proc igGetWindowContentRegionMin*(): ImVec2 {.imgui_lib, importc: "igGetWindowContentRegionMin".}
proc igLogButtons*(): void {.imgui_lib, importc: "igLogButtons".}
proc igGetWindowContentRegionWidth*(): float32 {.imgui_lib, importc: "igGetWindowContentRegionWidth".}
proc igSliderAngle*(label: cstring, v_rad: ptr float32, v_degrees_min: float32, v_degrees_max: float32): bool {.imgui_lib, importc: "igSliderAngle".}
proc igTreeNodeEx*(label: cstring, flags: ImGuiTreeNodeFlags): bool {.imgui_lib, importc: "igTreeNodeEx".}
proc igGetWindowWidth*(): float32 {.imgui_lib, importc: "igGetWindowWidth".}
proc igPushTextWrapPos*(wrap_pos_x: float32): void {.imgui_lib, importc: "igPushTextWrapPos".}
proc imGuiStorage_GetInt*(key: ImGuiID, default_val: int32): int32 {.imgui_lib, importc: "ImGuiStorage_GetInt".}
proc igSliderInt3*(label: cstring, v: ptr int, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igSliderInt3".}
proc igShowUserGuide*(): void {.imgui_lib, importc: "igShowUserGuide".}
proc igSliderScalarN*(label: cstring, data_type: ImGuiDataType, v: pointer, components: int32, v_min: pointer, v_max: pointer, format: cstring, power: float32): bool {.imgui_lib, importc: "igSliderScalarN".}
proc imColor_HSV*(h: float32, s: float32, v: float32, a: float32): ImColor {.imgui_lib, importc: "ImColor_HSV".}
proc imDrawList_PathLineTo*(pos: ImVec2): void {.imgui_lib, importc: "ImDrawList_PathLineTo".}
proc igImage*(user_texture_id: ImTextureID, size: ImVec2, uv0: ImVec2, uv1: ImVec2, tint_col: ImVec4, border_col: ImVec4): void {.imgui_lib, importc: "igImage".}
proc igSetNextWindowSizeConstraints*(size_min: ImVec2, size_max: ImVec2, custom_callback: ImGuiSizeCallback, custom_callback_data: pointer): void {.imgui_lib, importc: "igSetNextWindowSizeConstraints".}
proc igDummy*(size: ImVec2): void {.imgui_lib, importc: "igDummy".}
proc igVSliderInt*(label: cstring, size: ImVec2, v: ptr int32, v_min: int32, v_max: int32, format: cstring): bool {.imgui_lib, importc: "igVSliderInt".}
proc imGuiTextBuffer_ImGuiTextBuffer*(): void {.imgui_lib, importc: "ImGuiTextBuffer_ImGuiTextBuffer".}
proc igBulletText*(fmt: cstring): void {.imgui_lib, importc: "igBulletText", varargs.}
proc igColorEdit4*(label: cstring, col: ptr float, flags: ImGuiColorEditFlags): bool {.imgui_lib, importc: "igColorEdit4".}
proc igColorPicker4*(label: cstring, col: ptr float, flags: ImGuiColorEditFlags, ref_col: ptr float32): bool {.imgui_lib, importc: "igColorPicker4".}
proc imDrawList_PrimRectUV*(a: ImVec2, b: ImVec2, uv_a: ImVec2, uv_b: ImVec2, col: ImU32): void {.imgui_lib, importc: "ImDrawList_PrimRectUV".}
proc igInvisibleButton*(str_id: cstring, size: ImVec2): bool {.imgui_lib, importc: "igInvisibleButton".}
proc igLogToClipboard*(max_depth: int32): void {.imgui_lib, importc: "igLogToClipboard".}
proc igBeginPopupContextWindow*(str_id: cstring, mouse_button: int32, also_over_items: bool): bool {.imgui_lib, importc: "igBeginPopupContextWindow".}
proc imFontAtlas_ImFontAtlas*(): void {.imgui_lib, importc: "ImFontAtlas_ImFontAtlas".}
proc igDragScalar*(label: cstring, data_type: ImGuiDataType, v: pointer, v_speed: float32, v_min: pointer, v_max: pointer, format: cstring, power: float32): bool {.imgui_lib, importc: "igDragScalar".}
proc igSetItemDefaultFocus*(): void {.imgui_lib, importc: "igSetItemDefaultFocus".}
proc igCaptureMouseFromApp*(capture: bool): void {.imgui_lib, importc: "igCaptureMouseFromApp".}
proc igIsAnyItemHovered*(): bool {.imgui_lib, importc: "igIsAnyItemHovered".}
proc igPushFont*(font: ptr ImFont): void {.imgui_lib, importc: "igPushFont".}
proc igInputInt2*(label: cstring, v: ptr int, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputInt2".}
proc igTreePop*(): void {.imgui_lib, importc: "igTreePop".}
proc igEnd*(): void {.imgui_lib, importc: "igEnd".}
proc imDrawData_ImDrawData*(): void {.imgui_lib, importc: "ImDrawData_ImDrawData".}
proc igDestroyContext*(ctx: ptr ImGuiContext): void {.imgui_lib, importc: "igDestroyContext".}
proc imGuiTextBuffer_end*(): cstring {.imgui_lib, importc: "ImGuiTextBuffer_end".}
proc igPopStyleVar*(count: int32): void {.imgui_lib, importc: "igPopStyleVar".}
proc imGuiTextFilter_PassFilter*(text: cstring, text_end: cstring): bool {.imgui_lib, importc: "ImGuiTextFilter_PassFilter".}
proc igShowStyleSelector*(label: cstring): bool {.imgui_lib, importc: "igShowStyleSelector".}
proc igInputScalarN*(label: cstring, data_type: ImGuiDataType, v: pointer, components: int32, step: pointer, step_fast: pointer, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputScalarN".}
proc igTreeNode*(label: cstring): bool {.imgui_lib, importc: "igTreeNode".}
proc igTreeNodeV*(str_id: cstring, fmt: cstring): bool {.imgui_lib, importc: "igTreeNodeV", varargs.}
proc igGetScrollMaxX*(): float32 {.imgui_lib, importc: "igGetScrollMaxX".}
proc igSetTooltip*(fmt: cstring): void {.imgui_lib, importc: "igSetTooltip", varargs.}
proc igGetContentRegionAvail*(): ImVec2 {.imgui_lib, importc: "igGetContentRegionAvail".}
proc igInputFloat3*(label: cstring, v: ptr float, format: cstring, extra_flags: ImGuiInputTextFlags): bool {.imgui_lib, importc: "igInputFloat3".}
proc igDragFloat2*(label: cstring, v: ptr float, v_speed: float32, v_min: float32, v_max: float32, format: cstring, power: float32): bool {.imgui_lib, importc: "igDragFloat2".}
